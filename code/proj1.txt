char currentkey = '1';

color bgc = color(255);

void setup() {

size(600, 600);
background(255);
smooth();
noStroke();

}

void draw() {

// triggering the clear_print function
if(keyPressed) {
clear_print(); 
}
// triggering the newkeychoice
if(mousePressed) {
  drawChoice(); 
}
     //println (frameCount); 
      
     //record (1111);
  
}


void drawChoice() {
  // the key mapping if statemens that you can change to do anything you want.
  // just make sure each key option has the a stroke or fill and then what type of 
  // graphic function
 
   
 // key global variable contains whatever key was last pressed 
 char currentkey = key;
   
switch(currentkey) {
  
case 'b': 
println("bg color change randomly with mouse click");  // randomize bg color
  rect (0,0,width,height);
  fill(random(0,255), random(0,255), random(0,255),22);
  noStroke ();
  break;
  
case '1': 
  println("brush 1");  // rainbow triangle2

  triangle (mouseX, mouseY, mouseX+22, mouseY-22, mouseX+20, mouseY+22);
  fill(random(0,255), random(0,255), random(0,255),22);
  noStroke ();
  break;
  
case '2': 
  println("brush 2");  // trans cross
  line(mouseX-22, mouseY, mouseX+22, mouseY);
  line(mouseX, mouseY-22, mouseX, mouseY+22); 
  stroke(0,55);
  break;

case '3':  //trans quad
  println("brush 3");  
  quad (mouseX-14, mouseY+5, mouseX-3, mouseY-7, mouseX+12, mouseY-2, mouseX, mouseY+11);
  fill (0,10);
  noStroke();
  break;
  
case 'e':
  println("eraser"); // erase with bg color
  ellipse (mouseX, mouseY, 22, 22);
  fill(bgc);
  noStroke();
  smooth();
  break;
  
default:             // Default executes if the case labels
  println("None");   // don't match the switch parameter
  break;   
}
  
}


void clear_print() { 

  if (key == 'x' || key == 'X') {
     background(bgc);  //clear the whole bg
      }
}

  //   void record (int t) {    //t for total frame count to record
  //    if ( frameCount < t) {
  //      saveFrame("images/rainbowbrush_###.png");   //###: frame numbers
  //    } else {
        
  //      exit ();
  //    }
  //}
  


 